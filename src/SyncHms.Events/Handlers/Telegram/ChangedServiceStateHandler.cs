namespace SyncHms.Events.Handlers.Telegram;

/// <summary>
/// –ö–ª–∞—Å—Å, –æ–ø–∏—Å—ã–≤–∞—é—â–∏–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–±—ã—Ç–∏—è <see cref="ChangedServiceState"/>,
/// –æ–ø–æ–≤–µ—â–∞—é—â–µ–≥–æ –æ–± –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Å–æ—Å—Ç–æ—è–Ω–∏—è —Å–µ—Ä–≤–∏—Å–∞.<br/>
/// –£–Ω–∞—Å–ª–µ–¥–æ–≤–∞–Ω –æ—Ç –∫–ª–∞—Å—Å–∞ <see cref="Handler{TIn}"/>
/// </summary>
internal class ChangedServiceStateHandler(ITelegramBotService telegramBotService) : Handler<ChangedServiceState>
{
    /// <summary>–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–ª–∏—á–µ—Å—Ç–≤–æ —Å–∏–º–≤–æ–ª–æ–≤ –≤ –∏–º–µ–Ω–∏ —Å–µ—Ä–≤–∏—Å–∞.</summary>
    private const int ServiceNameMaxLength = 50;
    
    /// <summary>–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–ª–∏—á–µ—Å—Ç–≤–æ —Å–∏–º–≤–æ–ª–æ–≤ –≤ —Å–æ–æ–±—â–µ–Ω–∏–∏.</summary>
    private const int MessageMaxLength = 3000;
    
    /// <summary>
    /// –ú–µ—Ç–æ–¥, –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—é—â–∏–π —Å–æ–±—ã—Ç–∏–µ <see cref="ChangedServiceState"/>.<br/>
    /// –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Å–æ—Å—Ç–æ—è–Ω–∏—è —Å–µ—Ä–≤–∏—Å–∞ –≤ —á–∞—Ç—ã, —É–∫–∞–∑–∞–Ω–Ω—ã–µ –≤ –ø–∞—Ä–∞–º–µ—Ç—Ä–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
    /// <see cref="ApplicationEnvironment.TelegramChats"/> –±–æ—Ç–∞ <c>Telegram</c>.<br/>
    /// –ü–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç –º–µ—Ç–æ–¥ <see cref="Handler{TIn}.HandleAsync"/>
    /// </summary>
    /// <param name="in">–≠–∫–∑–µ–º–ø–ª—è—Ä –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º–æ–≥–æ —Å–æ–±—ã—Ç–∏—è.</param>
    /// <param name="context">–ö–æ–Ω—Ç–µ–∫—Å—Ç –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å–æ–±—ã—Ç–∏—è.</param>
    protected override async Task HandleAsync(ChangedServiceState @in, IEventContext context)
    {
        if (!telegramBotService.Enabled || !telegramBotService.Chats.Any())
            return;
        
        var stringBuilder = new StringBuilder()
            .AppendSubstring(@in.ServiceName, ServiceNameMaxLength, @in.Connection ? "‚úÖ " : "‚ùå ", "Service")
            .Append($" {(@in.Connection ? string.Empty : "dis")}connected.");
        
        if (!string.IsNullOrWhiteSpace(@in.Message))
            stringBuilder
                .AppendLine()
                .AppendLine()
                .AppendSubstring(@in.Message, MessageMaxLength, @in.Connection ? "üí¨ " : "‚ö†Ô∏è ");
        
        var message = stringBuilder.ToString();
        
        foreach (var chat in telegramBotService.Chats)
            await telegramBotService.SendTextMessageAsync(chat.Id, message, chat.MessageThreadId);
    }
}
